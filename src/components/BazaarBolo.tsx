import React, { useState, useEffect } from 'react';
import { ArrowLeft, TrendingUp, TrendingDown, MapPin, Calendar, AlertTriangle, Sparkles, Target, DollarSign, RefreshCw } from 'lucide-react';

type Language = 'hindi' | 'kannada' | 'tamil' | 'english';

interface BazaarBoloProps {
  onBack: () => void;
  language: Language;
}

interface MarketRecord {
  state: string;
  district: string;
  market: string;
  commodity: string;
  variety: string;
  grade: string;
  arrival_date: string;
  min_price: string;
  max_price: string;
  modal_price: string;
}

interface ApiResponse {
  records: MarketRecord[];
  total: number;
  status: string;
}

const BazaarBolo: React.FC<BazaarBoloProps> = ({ onBack, language }) => {
  const [selectedVariety, setSelectedVariety] = useState('');
  const [selectedState, setSelectedState] = useState('');
  const [marketData, setMarketData] = useState<MarketRecord[]>([]);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);

  // Available varieties and states based on the API
  const varieties = {
    hindi: ['рдХреЗрд▓рд╛', 'рдЪрд╛рд╡рд▓', 'рдЧреЗрд╣реВрдВ', 'рдкреНрдпрд╛рдЬ', 'рдЖрд▓реВ', 'рдЯрдорд╛рдЯрд░', 'рдорд┐рд░реНрдЪ'],
    kannada: ['р▓мр▓╛р▓│р│Жр▓╣р▓гр│Нр▓гр│Б', 'р▓Ер▓Хр│Нр▓Хр▓┐', 'р▓Чр│Лр▓зр▓┐', 'р▓Ир▓░р│Бр▓│р│Нр▓│р▓┐', 'р▓Жр▓▓р│Вр▓Чр▓бр│Нр▓бр│Ж', 'р▓Яр│Кр▓ор│Зр▓Яр│К', 'р▓ор│Жр▓гр▓╕р▓┐р▓ир▓Хр▓╛р▓пр▓┐'],
    tamil: ['ро╡ро╛ро┤рпИрокрпНрокро┤роорпН', 'роЕро░ро┐роЪро┐', 'роХрпЛродрпБроорпИ', 'ро╡рпЖроЩрпНроХро╛ропроорпН', 'роЙро░рпБро│рпИроХрпНроХро┐ро┤роЩрпНроХрпБ', 'родроХрпНроХро╛ро│ро┐', 'рооро┐ро│роХро╛ропрпН'],
    english: ['Banana', 'Rice', 'Wheat', 'Onion', 'Potato', 'Tomato', 'Chili']
  };

  const varietyMapping: { [key: string]: string } = {
    'рдХреЗрд▓рд╛': 'Banana', 'р▓мр▓╛р▓│р│Жр▓╣р▓гр│Нр▓гр│Б': 'Banana', 'ро╡ро╛ро┤рпИрокрпНрокро┤роорпН': 'Banana', 'Banana': 'Banana',
    'рдЪрд╛рд╡рд▓': 'Rice', 'р▓Ер▓Хр│Нр▓Хр▓┐': 'Rice', 'роЕро░ро┐роЪро┐': 'Rice', 'Rice': 'Rice',
    'рдЧреЗрд╣реВрдВ': 'Wheat', 'р▓Чр│Лр▓зр▓┐': 'Wheat', 'роХрпЛродрпБроорпИ': 'Wheat', 'Wheat': 'Wheat',
    'рдкреНрдпрд╛рдЬ': 'Onion', 'р▓Ир▓░р│Бр▓│р│Нр▓│р▓┐': 'Onion', 'ро╡рпЖроЩрпНроХро╛ропроорпН': 'Onion', 'Onion': 'Onion',
    'рдЖрд▓реВ': 'Potato', 'р▓Жр▓▓р│Вр▓Чр▓бр│Нр▓бр│Ж': 'Potato', 'роЙро░рпБро│рпИроХрпНроХро┐ро┤роЩрпНроХрпБ': 'Potato', 'Potato': 'Potato',
    'рдЯрдорд╛рдЯрд░': 'Tomato', 'р▓Яр│Кр▓ор│Зр▓Яр│К': 'Tomato', 'родроХрпНроХро╛ро│ро┐': 'Tomato', 'Tomato': 'Tomato',
    'рдорд┐рд░реНрдЪ': 'Chili', 'р▓ор│Жр▓гр▓╕р▓┐р▓ир▓Хр▓╛р▓пр▓┐': 'Chili', 'рооро┐ро│роХро╛ропрпН': 'Chili', 'Chili': 'Chili'
  };

  const states = {
    hindi: ['рдХреЗрд░рд▓', 'рдХрд░реНрдирд╛рдЯрдХ', 'рддрдорд┐рд▓рдирд╛рдбреБ', 'рдорд╣рд╛рд░рд╛рд╖реНрдЯреНрд░', 'рдкрдВрдЬрд╛рдм', 'рд╣рд░рд┐рдпрд╛рдгрд╛', 'рдЙрддреНрддрд░ рдкреНрд░рджреЗрд╢', 'рд░рд╛рдЬрд╕реНрдерд╛рди'],
    kannada: ['р▓Хр│Зр▓░р▓│', 'р▓Хр▓░р│Нр▓ир▓╛р▓Яр▓Х', 'р▓др▓ор▓┐р▓│р│Бр▓ир▓╛р▓бр│Б', 'р▓ор▓╣р▓╛р▓░р▓╛р▓╖р│Нр▓Яр│Нр▓░', 'р▓кр▓Вр▓Ьр▓╛р▓мр│Н', 'р▓╣р▓░р▓┐р▓пр▓╛р▓г', 'р▓Йр▓др│Нр▓др▓░ р▓кр│Нр▓░р▓жр│Зр▓╢', 'р▓░р▓╛р▓Ьр▓╕р│Нр▓ер▓╛р▓и'],
    tamil: ['роХрпЗро░ро│ро╛', 'роХро░рпНроиро╛роЯроХро╛', 'родрооро┐ро┤рпНроиро╛роЯрпБ', 'роороХро╛ро░ро╛ро╖рпНроЯро┐ро░ро╛', 'рокроЮрпНроЪро╛рокрпН', 'ро╣ро░ро┐ропро╛ройро╛', 'роЙродрпНродро░рокро┐ро░родрпЗроЪроорпН', 'ро░ро╛роЬро╕рпНродро╛ройрпН'],
    english: ['Kerala', 'Karnataka', 'Tamil Nadu', 'Maharashtra', 'Punjab', 'Haryana', 'Uttar Pradesh', 'Rajasthan']
  };

  const stateMapping: { [key: string]: string } = {
    'рдХреЗрд░рд▓': 'Kerala', 'р▓Хр│Зр▓░р▓│': 'Kerala', 'роХрпЗро░ро│ро╛': 'Kerala', 'Kerala': 'Kerala',
    'рдХрд░реНрдирд╛рдЯрдХ': 'Karnataka', 'р▓Хр▓░р│Нр▓ир▓╛р▓Яр▓Х': 'Karnataka', 'роХро░рпНроиро╛роЯроХро╛': 'Karnataka', 'Karnataka': 'Karnataka',
    'рддрдорд┐рд▓рдирд╛рдбреБ': 'Tamil Nadu', 'р▓др▓ор▓┐р▓│р│Бр▓ир▓╛р▓бр│Б': 'Tamil Nadu', 'родрооро┐ро┤рпНроиро╛роЯрпБ': 'Tamil Nadu', 'Tamil Nadu': 'Tamil Nadu',
    'рдорд╣рд╛рд░рд╛рд╖реНрдЯреНрд░': 'Maharashtra', 'р▓ор▓╣р▓╛р▓░р▓╛р▓╖р│Нр▓Яр│Нр▓░': 'Maharashtra', 'роороХро╛ро░ро╛ро╖рпНроЯро┐ро░ро╛': 'Maharashtra', 'Maharashtra': 'Maharashtra',
    'рдкрдВрдЬрд╛рдм': 'Punjab', 'р▓кр▓Вр▓Ьр▓╛р▓мр│Н': 'Punjab', 'рокроЮрпНроЪро╛рокрпН': 'Punjab', 'Punjab': 'Punjab',
    'рд╣рд░рд┐рдпрд╛рдгрд╛': 'Haryana', 'р▓╣р▓░р▓┐р▓пр▓╛р▓г': 'Haryana', 'ро╣ро░ро┐ропро╛ройро╛': 'Haryana', 'Haryana': 'Haryana',
    'рдЙрддреНрддрд░ рдкреНрд░рджреЗрд╢': 'Uttar Pradesh', 'р▓Йр▓др│Нр▓др▓░ р▓кр│Нр▓░р▓жр│Зр▓╢': 'Uttar Pradesh', 'роЙродрпНродро░рокро┐ро░родрпЗроЪроорпН': 'Uttar Pradesh', 'Uttar Pradesh': 'Uttar Pradesh',
    'рд░рд╛рдЬрд╕реНрдерд╛рди': 'Rajasthan', 'р▓░р▓╛р▓Ьр▓╕р│Нр▓ер▓╛р▓и': 'Rajasthan', 'ро░ро╛роЬро╕рпНродро╛ройрпН': 'Rajasthan', 'Rajasthan': 'Rajasthan'
  };

  const fetchMarketData = async () => {
    if (!selectedVariety || !selectedState) return;

    setIsLoading(true);
    setError(null);

    try {
      const varietyParam = varietyMapping[selectedVariety];
      const stateParam = stateMapping[selectedState];
      
      const apiUrl = `https://api.data.gov.in/resource/9ef84268-d588-465a-a308-a864a43d0070?api-key=579b464db66ec23bdd000001aba79f07780a439a665a7e0bb5f60996&format=json&filters%5Bvariety%5D=${encodeURIComponent(varietyParam)}&filters%5Bstate%5D=${encodeURIComponent(stateParam)}&limit=50`;
      
      const response = await fetch(apiUrl, {
        method: 'GET',
        headers: {
          'accept': 'application/json',
        },
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const data: ApiResponse = await response.json();
      
      if (data.status === 'ok' && data.records) {
        setMarketData(data.records);
        setLastUpdated(new Date());
      } else {
        throw new Error('No data available for selected criteria');
      }
    } catch (err) {
      setError(err instanceof Error ? err.message : 'Failed to fetch market data');
      setMarketData([]);
    } finally {
      setIsLoading(false);
    }
  };

  const calculateAveragePrice = () => {
    if (marketData.length === 0) return 0;
    const sum = marketData.reduce((acc, record) => acc + parseFloat(record.modal_price), 0);
    return Math.round(sum / marketData.length);
  };

  const getLowestPrice = () => {
    if (marketData.length === 0) return 0;
    return Math.min(...marketData.map(record => parseFloat(record.min_price)));
  };

  const getHighestPrice = () => {
    if (marketData.length === 0) return 0;
    return Math.max(...marketData.map(record => parseFloat(record.max_price)));
  };

  const titles = {
    hindi: 'рдмрд╛рдЬрд╛рд░ рдмреЛрд▓реЛ - рдордВрдбреА рдЧреБрд░реБ',
    kannada: 'р▓мр▓Ьр▓╛р▓░р│Н р▓мр│Лр▓▓р│Л - р▓ор▓Вр▓бр▓┐ р▓Чр│Бр▓░р│Б',
    tamil: 'рокроЬро╛ро░рпН рокрпЛро▓рпЛ - роорогрпНроЯро┐ роХрпБро░рпБ',
    english: 'Market Guru - Real-time Prices'
  };

  return (
    <div className="max-w-5xl mx-auto">
      <div className="flex items-center mb-8">
        <button
          onClick={onBack}
          className="flex items-center space-x-3 text-gray-600 hover:text-gray-800 bg-white/80 backdrop-blur-sm px-4 py-2 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300"
        >
          <ArrowLeft className="w-5 h-5" />
          <span className="font-medium">
            {language === 'hindi' ? 'рд╡рд╛рдкрд╕' :
             language === 'kannada' ? 'р▓╣р▓┐р▓Вр▓жр│Ж' :
             language === 'tamil' ? 'рокро┐ройрпНройро╛ро▓рпН' :
             'Back'}
          </span>
        </button>
      </div>

      <div className="bg-white/90 backdrop-blur-sm rounded-3xl shadow-2xl p-8 border border-white/50">
        {/* Title Section */}
        <div className="text-center mb-10">
          <div className="flex justify-center mb-6">
            <div className="relative">
              <div className="w-24 h-24 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-3xl flex items-center justify-center shadow-2xl">
                <span className="text-4xl">ЁЯУИ</span>
              </div>
              <div className="absolute -top-2 -right-2 w-10 h-10 bg-gradient-to-r from-green-400 to-emerald-400 rounded-full flex items-center justify-center">
                <DollarSign className="w-5 h-5 text-white" />
              </div>
            </div>
          </div>
          <h1 className="text-4xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent mb-4">
            {titles[language]}
          </h1>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            {language === 'hindi' ? 'рднрд╛рд░рдд рд╕рд░рдХрд╛рд░ рдХреЗ рд╡рд╛рд╕реНрддрд╡рд┐рдХ рд╕рдордп рдбреЗрдЯрд╛ рд╕реЗ рд▓рд╛рдЗрд╡ рдордВрдбреА рдХреАрдорддреЗрдВ' :
             language === 'kannada' ? 'р▓нр▓╛р▓░р▓д р▓╕р▓░р▓Хр▓╛р▓░р▓ж р▓ир│Ир▓Ь р▓╕р▓ор▓п р▓бр│Зр▓Яр▓╛р▓жр▓┐р▓Вр▓ж р▓▓р│Ир▓╡р│Н р▓ор▓Вр▓бр▓┐ р▓мр│Жр▓▓р│Жр▓Чр▓│р│Б' :
             language === 'tamil' ? 'роЗроирпНродро┐роп роЕро░роЪро┐ройрпН роирпЗро░роЯро┐ родро░ро╡ро┐ро▓ро┐ро░рпБроирпНродрпБ роЙропро┐ро░рпЛроЯрпНроЯрооро╛рой роорогрпНроЯро┐ ро╡ро┐ро▓рпИроХро│рпН' :
             'Live market prices from real-time Government of India data'}
          </p>
          
          {/* Feature Highlights */}
          <div className="flex justify-center space-x-8 mt-8">
            <div className="flex items-center space-x-2 text-blue-600">
              <Target className="w-5 h-5" />
              <span className="text-sm font-medium">
                {language === 'hindi' ? 'рд╕рд░рдХрд╛рд░реА рдбреЗрдЯрд╛' :
                 language === 'kannada' ? 'р▓╕р▓░р│Нр▓Хр▓╛р▓░р▓┐ р▓бр│Зр▓Яр▓╛' :
                 language === 'tamil' ? 'роЕро░роЪрпБ родро░ро╡рпБ' :
                 'Government Data'}
              </span>
            </div>
            <div className="flex items-center space-x-2 text-green-600">
              <Sparkles className="w-5 h-5" />
              <span className="text-sm font-medium">
                {language === 'hindi' ? 'рд░реАрдпрд▓-рдЯрд╛рдЗрдо' :
                 language === 'kannada' ? 'р▓ир│Ир▓Ь-р▓╕р▓ор▓п' :
                 language === 'tamil' ? 'роирпЗро░роЯро┐ роХро╛ро▓роорпН' :
                 'Real-time'}
              </span>
            </div>
          </div>
        </div>

        {/* Search Form */}
        <div className="grid md:grid-cols-2 gap-8 mb-10">
          <div className="space-y-3">
            <label className="block text-lg font-semibold text-gray-700 flex items-center space-x-2">
              <span className="text-2xl">ЁЯМ╛</span>
              <span>
                {language === 'hindi' ? 'рдлрд╕рд▓ рдЪреБрдиреЗрдВ' :
                 language === 'kannada' ? 'р▓мр│Жр▓│р│Ж р▓Жр▓пр│Нр▓Хр│Ж р▓ор▓╛р▓бр▓┐' :
                 language === 'tamil' ? 'рокропро┐ро░рпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН' :
                 'Select Crop'}
              </span>
            </label>
            <select
              value={selectedVariety}
              onChange={(e) => setSelectedVariety(e.target.value)}
              className="w-full p-4 border-2 border-gray-200 rounded-2xl focus:ring-4 focus:ring-blue-200 focus:border-blue-500 transition-all duration-300 text-lg bg-white shadow-lg"
            >
              <option value="">
                {language === 'hindi' ? 'рдлрд╕рд▓ рдЪреБрдиреЗрдВ' :
                 language === 'kannada' ? 'р▓мр│Жр▓│р│Ж р▓Жр▓пр│Нр▓Хр│Ж р▓ор▓╛р▓бр▓┐' :
                 language === 'tamil' ? 'рокропро┐ро░рпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН' :
                 'Select Crop'}
              </option>
              {varieties[language].map((variety, index) => (
                <option key={index} value={variety}>{variety}</option>
              ))}
            </select>
          </div>

          <div className="space-y-3">
            <label className="block text-lg font-semibold text-gray-700 flex items-center space-x-2">
              <span className="text-2xl">ЁЯПЫя╕П</span>
              <span>
                {language === 'hindi' ? 'рд░рд╛рдЬреНрдп рдЪреБрдиреЗрдВ' :
                 language === 'kannada' ? 'р▓░р▓╛р▓Ьр│Нр▓п р▓Жр▓пр│Нр▓Хр│Ж р▓ор▓╛р▓бр▓┐' :
                 language === 'tamil' ? 'рооро╛роиро┐ро▓родрпНродрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН' :
                 'Select State'}
              </span>
            </label>
            <select
              value={selectedState}
              onChange={(e) => setSelectedState(e.target.value)}
              className="w-full p-4 border-2 border-gray-200 rounded-2xl focus:ring-4 focus:ring-blue-200 focus:border-blue-500 transition-all duration-300 text-lg bg-white shadow-lg"
            >
              <option value="">
                {language === 'hindi' ? 'рд░рд╛рдЬреНрдп рдЪреБрдиреЗрдВ' :
                 language === 'kannada' ? 'р▓░р▓╛р▓Ьр│Нр▓п р▓Жр▓пр│Нр▓Хр│Ж р▓ор▓╛р▓бр▓┐' :
                 language === 'tamil' ? 'рооро╛роиро┐ро▓родрпНродрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН' :
                 'Select State'}
              </option>
              {states[language].map((state, index) => (
                <option key={index} value={state}>{state}</option>
              ))}
            </select>
          </div>
        </div>

        <button
          onClick={fetchMarketData}
          disabled={!selectedVariety || !selectedState || isLoading}
          className="w-full bg-gradient-to-r from-blue-500 to-indigo-600 text-white py-4 rounded-2xl hover:from-blue-600 hover:to-indigo-700 disabled:from-gray-300 disabled:to-gray-400 disabled:cursor-not-allowed transition-all duration-300 shadow-xl hover:shadow-2xl transform hover:scale-105 text-lg font-semibold flex items-center justify-center space-x-3"
        >
          {isLoading ? (
            <>
              <div className="w-6 h-6 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
              <span>
                {language === 'hindi' ? 'рдбреЗрдЯрд╛ рд▓реЛрдб рд╣реЛ рд░рд╣рд╛ рд╣реИ...' :
                 language === 'kannada' ? 'р▓бр│Зр▓Яр▓╛ р▓▓р│Лр▓бр│Н р▓Жр▓Чр│Бр▓др│Нр▓др▓┐р▓жр│Ж...' :
                 language === 'tamil' ? 'родро░ро╡рпБ роПро▒рпНро▒рокрпНрокроЯрпБроХро┐ро▒родрпБ...' :
                 'Loading Data...'}
              </span>
            </>
          ) : (
            <>
              <RefreshCw className="w-6 h-6" />
              <span>
                {language === 'hindi' ? 'рд▓рд╛рдЗрд╡ рдХреАрдордд рджреЗрдЦреЗрдВ' :
                 language === 'kannada' ? 'р▓▓р│Ир▓╡р│Н р▓мр│Жр▓▓р│Ж р▓ир│Лр▓бр▓┐' :
                 language === 'tamil' ? 'роирпЗро░роЯро┐ ро╡ро┐ро▓рпИропрпИрокрпН рокро╛ро░рпНроХрпНроХро╡рпБроорпН' :
                 'Get Live Prices'}
              </span>
            </>
          )}
        </button>

        {/* Error Display */}
        {error && (
          <div className="mt-6 p-4 bg-red-50 border border-red-200 rounded-2xl">
            <div className="flex items-center space-x-2 text-red-700">
              <AlertTriangle className="w-5 h-5" />
              <span className="font-medium">
                {language === 'hindi' ? 'рддреНрд░реБрдЯрд┐: ' :
                 language === 'kannada' ? 'р▓жр│Лр▓╖: ' :
                 language === 'tamil' ? 'рокро┐ро┤рпИ: ' :
                 'Error: '}
                {error}
              </span>
            </div>
          </div>
        )}

        {/* Market Data Results */}
        {marketData.length > 0 && (
          <div className="mt-10 space-y-8">
            {/* Last Updated */}
            {lastUpdated && (
              <div className="text-center text-sm text-gray-500 bg-blue-50 p-3 rounded-2xl">
                <Calendar className="w-4 h-4 inline mr-2" />
                {language === 'hindi' ? 'рдЕрдВрддрд┐рдо рдЕрдкрдбреЗрдЯ: ' :
                 language === 'kannada' ? 'р▓Хр│Кр▓ир│Жр▓п р▓ир▓╡р│Ар▓Хр▓░р▓г: ' :
                 language === 'tamil' ? 'роХроЯрпИроЪро┐ рокрпБродрпБрокрпНрокро┐рокрпНрокрпБ: ' :
                 'Last Updated: '}
                {lastUpdated.toLocaleString()}
              </div>
            )}

            {/* Summary Cards */}
            <div className="grid md:grid-cols-3 gap-6">
              <div className="text-center p-8 bg-gradient-to-br from-blue-50 to-indigo-50 rounded-3xl border-2 border-blue-100 shadow-xl">
                <div className="w-16 h-16 bg-gradient-to-r from-blue-500 to-indigo-500 rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg">
                  <DollarSign className="w-8 h-8 text-white" />
                </div>
                <div className="text-4xl font-bold text-blue-600 mb-2">тВ╣{calculateAveragePrice()}</div>
                <div className="text-sm text-gray-600 font-medium">
                  {language === 'hindi' ? 'рдФрд╕рдд рдХреАрдордд (рдкреНрд░рддрд┐ рдХреНрд╡рд┐рдВрдЯрд▓)' :
                   language === 'kannada' ? 'р▓╕р▓░р▓╛р▓╕р▓░р▓┐ р▓мр│Жр▓▓р│Ж (р▓кр│Нр▓░р▓др▓┐ р▓Хр│Нр▓╡р▓┐р▓Вр▓Яр▓▓р│Н)' :
                   language === 'tamil' ? 'роЪро░ро╛роЪро░ро┐ ро╡ро┐ро▓рпИ (роТро░рпБ роХрпБро╡ро┐ройрпНроЯро▓рпБроХрпНроХрпБ)' :
                   'Average Price (per quintal)'}
                </div>
              </div>

              <div className="text-center p-8 bg-gradient-to-br from-green-50 to-emerald-50 rounded-3xl border-2 border-green-100 shadow-xl">
                <div className="w-16 h-16 bg-gradient-to-r from-green-500 to-emerald-500 rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg">
                  <TrendingDown className="w-8 h-8 text-white" />
                </div>
                <div className="text-4xl font-bold text-green-600 mb-2">тВ╣{getLowestPrice()}</div>
                <div className="text-sm text-gray-600 font-medium">
                  {language === 'hindi' ? 'рдиреНрдпреВрдирддрдо рдХреАрдордд' :
                   language === 'kannada' ? 'р▓Хр▓ир▓┐р▓╖р│Нр▓а р▓мр│Жр▓▓р│Ж' :
                   language === 'tamil' ? 'роХрпБро▒рпИроирпНродрокроЯрпНроЪ ро╡ро┐ро▓рпИ' :
                   'Minimum Price'}
                </div>
              </div>

              <div className="text-center p-8 bg-gradient-to-br from-red-50 to-pink-50 rounded-3xl border-2 border-red-100 shadow-xl">
                <div className="w-16 h-16 bg-gradient-to-r from-red-500 to-pink-500 rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg">
                  <TrendingUp className="w-8 h-8 text-white" />
                </div>
                <div className="text-4xl font-bold text-red-600 mb-2">тВ╣{getHighestPrice()}</div>
                <div className="text-sm text-gray-600 font-medium">
                  {language === 'hindi' ? 'рдЕрдзрд┐рдХрддрдо рдХреАрдордд' :
                   language === 'kannada' ? 'р▓Чр▓░р▓┐р▓╖р│Нр▓а р▓мр│Жр▓▓р│Ж' :
                   language === 'tamil' ? 'роЕродро┐роХрокроЯрпНроЪ ро╡ро┐ро▓рпИ' :
                   'Maximum Price'}
                </div>
              </div>
            </div>

            {/* Market Details */}
            <div className="bg-white border-2 border-gray-100 rounded-3xl p-8 shadow-xl">
              <h3 className="text-2xl font-bold text-gray-800 mb-6 flex items-center space-x-3">
                <span className="text-3xl">ЁЯПк</span>
                <span>
                  {language === 'hindi' ? `${stateMapping[selectedState]} рдХреА рдордВрдбрд┐рдпреЛрдВ рдХреА рдХреАрдорддреЗрдВ (${marketData.length} рдордВрдбрд┐рдпрд╛рдВ)` :
                   language === 'kannada' ? `${stateMapping[selectedState]} р▓ор▓Вр▓бр▓┐р▓Чр▓│ р▓мр│Жр▓▓р│Жр▓Чр▓│р│Б (${marketData.length} р▓ор▓Вр▓бр▓┐р▓Чр▓│р│Б)` :
                   language === 'tamil' ? `${stateMapping[selectedState]} роорогрпНроЯро┐роХро│ро┐ройрпН ро╡ро┐ро▓рпИроХро│рпН (${marketData.length} роорогрпНроЯро┐роХро│рпН)` :
                   `${stateMapping[selectedState]} Market Prices (${marketData.length} Markets)`}
                </span>
              </h3>
              
              <div className="grid gap-4 max-h-96 overflow-y-auto">
                {marketData.map((record, index) => (
                  <div key={index} className="flex items-center justify-between p-6 bg-gradient-to-r from-gray-50 to-gray-100 rounded-2xl border border-gray-200 hover:shadow-lg transition-all duration-300">
                    <div className="flex items-center space-x-4">
                      <div className="w-12 h-12 bg-gradient-to-r from-blue-500 to-indigo-500 rounded-full flex items-center justify-center">
                        <MapPin className="w-6 h-6 text-white" />
                      </div>
                      <div>
                        <div className="font-semibold text-gray-800">{record.market}</div>
                        <div className="text-sm text-gray-500">{record.district}, {record.state}</div>
                        <div className="text-xs text-gray-400">{record.commodity} - {record.variety}</div>
                        <div className="text-xs text-blue-600">
                          {language === 'hindi' ? 'рдЖрдЧрдорди: ' :
                           language === 'kannada' ? 'р▓Жр▓Чр▓ор▓и: ' :
                           language === 'tamil' ? 'ро╡ро░рпБроХрпИ: ' :
                           'Arrival: '}
                          {record.arrival_date}
                        </div>
                      </div>
                    </div>
                    <div className="text-right">
                      <div className="text-xl font-bold text-green-600">тВ╣{record.modal_price}</div>
                      <div className="text-sm text-gray-500">
                        {language === 'hindi' ? 'рдореЛрдбрд▓ рдкреНрд░рд╛рдЗрд╕' :
                         language === 'kannada' ? 'р▓ор│Лр▓бр▓▓р│Н р▓мр│Жр▓▓р│Ж' :
                         language === 'tamil' ? 'роорпЛроЯро▓рпН ро╡ро┐ро▓рпИ' :
                         'Modal Price'}
                      </div>
                      <div className="text-xs text-gray-400">
                        тВ╣{record.min_price} - тВ╣{record.max_price}
                      </div>
                      <div className="text-xs text-blue-600">{record.grade}</div>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* Data Source Info */}
            <div className="bg-blue-50 border border-blue-200 rounded-2xl p-6">
              <div className="flex items-center space-x-3">
                <Target className="w-6 h-6 text-blue-600" />
                <div>
                  <h4 className="font-semibold text-blue-800">
                    {language === 'hindi' ? 'рдбреЗрдЯрд╛ рд╕реНрд░реЛрдд' :
                     language === 'kannada' ? 'р▓бр│Зр▓Яр▓╛ р▓ор│Вр▓▓' :
                     language === 'tamil' ? 'родро░ро╡рпБ роорпВро▓роорпН' :
                     'Data Source'}
                  </h4>
                  <p className="text-blue-700 text-sm">
                    {language === 'hindi' ? 'рднрд╛рд░рдд рд╕рд░рдХрд╛рд░, рдХреГрд╖рд┐ рдФрд░ рдХрд┐рд╕рд╛рди рдХрд▓реНрдпрд╛рдг рдордВрддреНрд░рд╛рд▓рдп - data.gov.in' :
                     language === 'kannada' ? 'р▓нр▓╛р▓░р▓д р▓╕р▓░р│Нр▓Хр▓╛р▓░, р▓Хр│Гр▓╖р▓┐ р▓ор▓др│Нр▓др│Б р▓░р│Ир▓д р▓Хр▓▓р│Нр▓пр▓╛р▓г р▓╕р▓Ър▓┐р▓╡р▓╛р▓▓р▓п - data.gov.in' :
                     language === 'tamil' ? 'роЗроирпНродро┐роп роЕро░роЪрпБ, ро╡ро┐ро╡роЪро╛ропроорпН рооро▒рпНро▒рпБроорпН ро╡ро┐ро╡роЪро╛ропро┐роХро│рпН роиро▓ройрпНрокрпБро░ро┐ роЕроорпИроЪрпНроЪроХроорпН - data.gov.in' :
                     'Government of India, Ministry of Agriculture and Farmers Welfare - data.gov.in'}
                  </p>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default BazaarBolo;